#pragma once

#include "MemAccess.h"
#include "SA2Structs.h"


DataArray(ButtonMapping, ButtonMappings, 0x9A2088, 12);
DataPointer(NJS_SPRITE, ConsoleSpriteIGuess, 0xA12710);
DataArray(char *, BattleOptions_ptr, 0xC711D8, 4);
DataArray(int, ChaoWorldCharacters, 0xC75368, 6);

DataArray(NJS_TEXLIST, texlist_objtex_common, 0x104DC2C, 8);

DataPointer(ObjectListEntry, AL_HeroGardenMaster_ObjectArray, 0x121ADB0);
DataPointer(ObjectListHead, AL_HeroGardenMaster_ObjectList, 0x121AE90);
DataPointer(ObjectListEntry, AL_NeutGardenMaster_ObjectArray, 0x121C7F0);
DataPointer(ObjectListHead, AL_NeutGardenMaster_ObjectList, 0x121C8B0);
DataPointer(CollisionData, ALO_LobbyGateDarkExecutor_collision, 0x122C028);
DataPointer(CollisionData, ALO_LobbyGate_collision, 0x123F070);
DataPointer(CollisionData, ALO_LobbyGateKinderExecutor_collision, 0x12562E0);
DataPointer(ObjectListEntry, AL_DarkGardenMaster_ObjectArray, 0x125B3D0);
DataPointer(ObjectListHead, AL_DarkGardenMaster_ObjectList, 0x125B4F0);
DataArray(struct_a1, ChaoKarateOpponents, 0x1296C10, 28);
DataPointer(int, ChaosDrive_RotationIncrement, 0x12E94A8);
DataPointer(__int16, ChaoTimescale, 0x1312DE4);
DataPointer(CollisionData*, ChaoCollisionData, 0x13134D0);
DataPointer(int, LastChaoArea, 0x13402AC);
DataPointer(int, CurrentChaoArea, 0x134046C);
DataPointer(int, NextChaoArea, 0x134062C);
DataPointer(ObjectListEntry, AL_RaceMaster_ObjectArray, 0x1353338);
DataPointer(ObjectListHead, AL_RaceMaster_ObjectList, 0x13533F8);
//DataPointer(NJS_VECTOR*, ProbablyChaoSpawnPoints, 0x1366260);
DataArray(NJS_VECTOR, ProbablyChaoSpawnPoints, 0x1366260, 48);
DataArray(ChaoSegmentData, ChaoSegments, 0x1366580, 19);
DataPointer(LevelHeader, ChaoHeader, 0x1367380);

DataArray(int, DebugCharacterList, 0x1415D18, 8);
DataArray(int, DebugLevelLists, 0x1415FB8, 17);
DataArray(int, DebugCharacterList2, 0x1416018, 8);
DataPointer(int*, Debug2PLevelLists, 0x1416108);

DataPointer(NJS_TEXLIST, CHAOSDRIVE_TEXLIST, 0x1717DAC);
DataArray(const char *, MusicList, 0x171A2B0, 156);
DataPointer(NJS_TEXLIST, CONSOLE_TEXLIST, 0x171A64C);
DataPointer(NJS_COLOR, ScreenFadeARGB, 0x171CDA0);
DataArray(PhysicsData, PhysicsArray, 0x17391E8, 19);
DataPointer(TexPackInfo *, CommonTextureInfoPtr, 0x1739BD4);
DataArray(RELFileInfo, RELFiles, 0x173A9A0, 77);
DataPointer(TexPackInfo, CommonTextureInfo, 0x173CE90);
DataPointer(unsigned int, ChaoSaveIndexThing, 0x173D06C);
DataPointer(char *, CurrentSavePath, 0x173D070);
DataArray(int, PortNumbers, 0x173D158, 4);
DataPointer(NJS_TEXLIST, PRESSSTART_TEXLIST, 0x174A9E0);
DataPointer(char, isLoading, 0x174AFC0);
DataPointer(char, TextLanguage, 0x174AFD1);
DataPointer(char, PlayerPaused, 0x174AFD7);
DataPointer(char, TimerMinutes, 0x174AFDB);
DataPointer(char, TimerSeconds, 0x174AFDC);
DataPointer(char, TimerFrames, 0x174AFDD);
DataPointer(char, TwoPlayerMode, 0x174AFDE);
DataPointer(char, Current2PLevelGroup, 0x174AFDF);
DataPointer(char, MissionNum, 0x174AFE3);
DataPointer(char*, SpecialActivateTimer, 0x174AFF3);
DataPointer(char*, RoundsWon, 0x174AFF5);
DataPointer(char, TimeStopped, 0x174AFF7);
DataPointer(char*, ControllerEnabled, 0x174AFFF);
DataPointer(char, HaveChaoKey, 0x174B004);
DataPointer(char, isEnglishIGuess, 0x174B008);
DataPointer(char, Pose2PStart_PlayerNum, 0x174B009);
DataPointer(char, RumbleEnabled, 0x174B00A);
DataArray(char, AltCostume, 0x174B013, 2);
DataArray(char, AltCharacter, 0x174B015, 2);
DataPointer(char, HandicapSettingMaybe, 0x174B01F);
DataPointer(char, TwoPlayerTimed, 0x174B020);
DataArray(__int16, Life_Count, 0x174B024, 2);
DataArray(__int16, RingCount, 0x174B028, 2);
DataPointer(__int16, LastRingCount, 0x174B02C);
DataPointer(__int16, PerfectRings, 0x174B02E);
DataArray(__int16, BattleWinCount, 0x174B034, 2);
DataPointer(int, FrameCount, 0x174B038);
DataPointer(int, FrameCountIngame, 0x174B03C);
DataPointer(int, GameMode, 0x174B040);
DataPointer(int, NextGameMode, 0x174B044);
DataPointer(int, ScoreP1, 0x174B050);
DataPointer(int, LastScoreP1, 0x174B054);
DataPointer(int, TotalRings, 0x174B05C);
DataPointer(float, HorizontalResolution, 0x174BA64);
DataPointer(float, VerticalResolution, 0x174BA68);
DataPointer(UINT, uID, 0x174F570);
DataPointer(int, WindowActive, 0x174F5AC);
DataPointer(LPVOID, lpTlsValue, 0x1751B28);
DataPointer(HANDLE, hHeap, 0x1751FF4);
DataPointer(volatile LONG, Target, 0x1752390);
DataPointer(int, nPriority, 0x17523A0);
DataPointer(DWORD, ThreadId, 0x17523D8);
DataPointer(HANDLE, hThread, 0x17523EC);
DataPointer(struct _RTL_CRITICAL_SECTION, CriticalSection, 0x17694C8);
DataPointer(HWND, MainWindowHandle, 0x1933EA8);
DataPointer(int, IsFullscreen, 0x1933EAC);
DataPointer(char, PauseSelection, 0x1933EB1);
DataPointer(char, PauseOptionCount, 0x1933EB2);
DataPointer(char, IsNotPauseHide, 0x1934B06);
DataPointer(__int16, CurrentLevel, 0x1934B70);
DataPointer(int, CurrentCharacter, 0x1934B80);
DataPointer(__int16, LastLevel, 0x1934B84);
DataPointer(__int16, GameState, 0x1934BE0);
DataPointer(int, CurrentCharacter2P, 0x1934BE4);
DataPointer(__int16, NextLevel, 0x1934BEC);
DataPointer(int*, MenuButtons_RepeatTimer, 0x1934BF0);
DataPointer(char*, CurrentSongName, 0x1936268);
DataPointer(NJS_TEXLIST *, LastTexList, 0x1942070);
DataPointer(LevelHeader *, CurrentLevelHeader, 0x19420FC);
DataPointer(LandTable *, CurrentLandTable, 0x19459DC);
DataPointer(ObjectMaster *, LandManagerPtr, 0x1945A04);
DataPointer(DWORD, ChaoSaveStart, 0x19F6460);
DataPointer(int, ChaoGardensUnlocked, 0x19F646C);
DataArray(int, ChaoToysUnlocked, 0x19F6470, 3);
DataArray(char, ChaoFruitSlots, 0x19F6528, 480);
DataArray(char, ChaoSeedSlots, 0x19F6848, 240);
DataArray(char, ChaoHatSlots, 0x19F6938, 480);
DataArray(char, ChaoAnimalSlots, 0x19F6B18, 200);
//DataPointer(ChaoData*, ChaoSlots, 0x19F6EC4);
DataArray(ChaoData, ChaoSlots, 0x19F6EC4, 24);
DataPointer(int, ALO_EntranceLampManager_ptr, 0x1A2771C);
DataPointer(int, SomeObjectPointers_Index, 0x1A2835C);
DataPointer(ObjectMaster **, SomeObjectPointers, 0x1A28360);


DataPointer(DWORD, dwMilliseconds, 0x1A51638);
DataPointer(int, SonicGravityAngle_Z, 0x1A51644);
DataPointer(int, SonicGravityAngle_X, 0x1A51960);
DataPointer(NJS_VECTOR, SonicGravity, 0x1A51A30);
DataPointer(Angle, KnucklesGravityAngle_Z, 0x1A51B78);
DataPointer(Angle, KnucklesGravityAngle_X, 0x1A51BB8);
DataPointer(NJS_VECTOR, KnucklesGravity, 0x1A51C4C);

DataArray(PDS_PERIPHERAL, ControllersRaw, 0x1A52918, 4);
DataArray(PDS_PERIPHERALINFO, PeripheralInfo, 0x1A52A68, 4);
DataPointer(int, HaveBattleDLC, 0x1A556F4);
DataPointer(int, HaveBattleDLC2, 0x1A556F8);
DataPointer(int, CheatsEnabled, 0x1A55770);
DataPointer(int, Cheats_GiveMaxRings, 0x1A55774);
DataPointer(int, Cheats_GiveAllUpgrades, 0x1A55778);
DataPointer(int, Cheats_GiveMaxLives, 0x1A5577C);
DataPointer(int, P2Start, 0x1A557C4);
DataArray(ObjectMaster *, VibTasks, 0x1A5588C, 4);
DataPointer(__int16, Cheats_ExitStage, 0x1A558A4);
DataPointer(int, MenuButtons_SomethingWasPressed, 0x1A558C0);
DataPointer(__int16, IsDPadPressed, 0x1A5592C);
DataPointer(PDS_PERIPHERAL, NullController, 0x1A55954);

DataArray(ObjectMaster *, ObjectLists, 0x1A5A254, 8);
DataPointer(ObjectFuncPtr, CurrentObjectSub, 0x1A5A274);
DataPointer(void*, DropRingsFunc_ptr, 0x1A5A28C);
DataPointer(void*, ParticleFunc_ptr, 0x1A5A290);
DataPointer(void*, DisplayItemBoxItemFunc_ptr, 0x1A5A294);
DataPointer(void*, EmeraldPieceFunc_ptr, 0x1A5A298);
DataPointer(void*, EmeraldGetSignFunc_ptr, 0x1A5A29C);
DataPointer(void*, ExpManExecFunc_ptr, 0x1A5A2A0);
DataPointer(void*, ObjectSkullObjFunc_ptr, 0x1A5A2A4);
DataPointer(void*, WaterRippleFunc_ptr, 0x1A5A2A8);
DataPointer(void*, WeatherFunc_ptr, 0x1A5A2AC);
DataPointer(void*, ExecFunc_ptr, 0x1A5A2B0);
DataPointer(void*, SomethingFunc_ptr, 0x1A5A2B4);
DataPointer(void*, SomethingFuncB_ptr, 0x1A5A2B8);
DataPointer(void*, SomethingFuncC_ptr, 0x1A5A2C0);
DataPointer(int, LandTableSA2BModels, 0x1A5A2D8);
DataPointer(ObjectMaster *, SetObject_ptr, 0x1A5A340);
DataPointer(FogData **, FogDataPtrPtr, 0x1A5A34C);
DataPointer(ObjectMaster *, ParticleCoreTask, 0x1A5A3B8);
DataPointer(ObjectMaster *, Super_ManTex_ptr, 0x1A5A42C);
DataPointer(ObjectMaster **, ManGCylExecutor_ptr, 0x1A5A768);
DataPointer(ObjectMaster *, cameraCons_ptr, 0x1A5A77C);
DataPointer(ChaoSegmentData *, ChaoSegmentPtr, 0x1A5BE1C);
DataPointer(AL_GBAManagerExecutor_Data *, AL_GBAManagerExecutor_ptr, 0x1A5CB54);
DataPointer(ObjectMaster *, ALO_RadicaseExecutor_ptr, 0x1AED2E0);
DataPointer(int, CrappyReplacementDepartureMachine, 0x1AED320);
DataPointer(ObjectMaster *, ALO_BoxExecutor_ptr, 0x1AED32C);
DataPointer(int, LastMenu, 0x1AEE300);
DataArray(int, PlayerReady, 0x1AEE598, 2);
DataPointer(int, CharacterSelectTimer, 0x1AEE5B0);
DataPointer(ObjectMaster *, StageMapExecInstance, 0x1AEE758);
DataPointer(ObjectMaster *, RingModelExec_ptr, 0x1AEFD88);
DataPointer(int, ExpManExec_ptr, 0x1AEFDB0);
DataPointer(ObjectMaster **, itemBoxManager_ptrs, 0x1AEFE98);
DataPointer(ObjectMaster *, FogTaskExec_ptr, 0x1AEFEA0);
DataPointer(FogData *, FogDataPtr, 0x1AEFEA4);
DataPointer(ObjectMaster *, FogtaskManExec_ptr, 0x1AEFEB4);
DataPointer(ObjectMaster *, PauseHintExec_ptr, 0x1AEFF60);
DataPointer(ObjectMaster *, ChaoKeyTaskObj, 0x1AEFF64);
DataPointer(ObjectMaster *, PosBar2PMan_ptr, 0x1AF0148);
DataPointer(ObjectMaster *, ObjSetManExec_ptr, 0x1AF0208);
DataPointer(HMODULE **, datadllhandle, 0x1AF0220);
DataPointer(LaunchConfig *, MainUserConfig, 0x1AF19EC);
DataPointer(MemManFuncs *, MemoryManager, 0x1D19CAC);
DataArray(char, CharacterToCostumeIndex, 0x1D1B8B0, 2);
DataPointer(char*, CharacterSelected, 0x1D1B8B2);
DataPointer(CharSelectThing*, CharSelectThings, 0x1D1B8C5);
DataArray(Uint8, character_copy_becauseweneedatleast7copiesofeveryvariable, 0x1D1B9E0, 2);
DataPointer(char, BattleSelection, 0x1D1B9F4);
DataPointer(MenuData*, MainMenu, 0x1D1BBC0);
DataPointer(char, SelectedMissionCharacter, 0x1D1BF05);
DataPointer(char, StageSelectLevelSelection, 0x1D1BF08);
DataArray(int, StageSelection2P, 0x1D1C060, 2);
DataArray(char, BattleOptions, 0x1D1C080, 4);
DataPointer(char, BattleOptionsSelection, 0x1D1C084);
DataPointer(char, BattleOptionsBack, 0x1D1C085);
DataPointer(int, BattleOptionsButton, 0x1D1C08C);
DataPointer(int, twoPVS_TexturesLoaded, 0x1D1C0CC);
DataPointer(char*, BattleWinCount_Copy, 0x1D1C114);
DataPointer(int, CurrentMenu, 0x1D7BB10);
DataPointer(int, CurrentSubMenu, 0x1D7BB14);
DataPointer(char*, SomeSFDStrings, 0x1DB0C00);
DataPointer(int, BlackMarketItemCount, 0x1DBED90);
DataArray(BlackMarketItem, BlackMarketInventory, 0x1DBEDC0,0x20);
DataArray(char, MemoryCard, 0x1DBEE00, 104);
DataPointer(ChaoData **, ChaoDataArray, 0x1DC0FC8);
DataPointer(ObjectMaster **, ChaoObjectArray, 0x1DC0FFC);
DataPointer(int, SplitscreenMode, 0x1DD946C);
DataArray(FogData, stg27_fogB, 0x1DDA160, 34);
DataPointer(LandTable, BasicLandTable, 0x1DDA3C0);
DataPointer(LandTable, ChunkLandTable, 0x1DDA3E0);
DataPointer(ObjectListHead *, CurrentObjectList, 0x1DDE268);
DataPointer(__int16, SETObjectCount, 0x1DDE270);
DataPointer(void *, SETFile, 0x1DDE274);
DataPointer(SETEntry *, SETEntries, 0x1DDE278);
DataArray(SETObjectData, SETObjects, 0x1DDE280, 1535);
DataArray(float, ProbablyFogTable, 0x1DE4280, 96);
DataPointer(void*, GetCurrentChaoStage_ptr, 0x1DE4698);
DataPointer(int, ArbitraryGravityAngle_X, 0x1DE9480);
DataPointer(NJS_VECTOR, ArbitraryGravity, 0x1DE9490);
DataPointer(Angle, GravityAngle_X, 0x1DE949C);
DataPointer(NJS_VECTOR, Gravity, 0x1DE94A0);
DataPointer(int, GravityAngle_Z, 0x1DE94AC);
DataPointer(int, ArbitraryGravityAngle_Z, 0x1DE94B0);
DataArray(CharObj2Base *, MainCharObj2, 0x1DE9600, 2);
DataArray(ModelIndex, CharacterModels, 0x1DE9620, 532);
DataArray(EntityData1 *, MainCharObj1, 0x1DEA6C0, 2);
DataArray(ObjectMaster *, MainCharacter, 0x1DEA6E0, 2);
DataArray(AnimationIndex, CharacterAnimations, 0x1DEA700, 300);
DataPointer(char, SonicLightShoesGot, 0x1DEB300);
DataPointer(char, SonicAncientLightGot, 0x1DEB301);
DataPointer(char, SonicMagicGlovesGot, 0x1DEB302);
DataPointer(char, SonicFlameRingGot, 0x1DEB303);
DataPointer(char, SonicBounceBraceletGot, 0x1DEB304);
DataPointer(char, SonicMysticMelodyGot, 0x1DEB305);
DataPointer(char, TailsBoosterGot, 0x1DEB306);
DataPointer(char, TailsBazookaGot, 0x1DEB307);
DataPointer(char, TailsLaserBlasterGot, 0x1DEB308);
DataPointer(char, TailsMysticMelodyGot, 0x1DEB309);
DataPointer(char, KnucklesShovelClawGot, 0x1DEB30A);
DataPointer(char, KnucklesSunglassesGot, 0x1DEB30B);
DataPointer(char, KnucklesHammerGlovesGot, 0x1DEB30C);
DataPointer(char, KnucklesAirNecklaceGot, 0x1DEB30D);
DataPointer(char, KnucklesMysticMelodyGot, 0x1DEB30E);
DataPointer(char, ShadowAirShoesGot, 0x1DEB310);
DataPointer(char, ShadowAncientLightGot, 0x1DEB311);
DataPointer(char, ShadowFlameRingGot, 0x1DEB312);
DataPointer(char, ShadowMysticMelodyGot, 0x1DEB313);
DataPointer(char, EggmanJetEngineGot, 0x1DEB314);
DataPointer(char, EggmanLargeCannonGot, 0x1DEB315);
DataPointer(char, EggmanLaserBlasterGot, 0x1DEB316);
DataPointer(char, EggmanProtectiveArmorGot, 0x1DEB317);
DataPointer(char, EggmanMysticMelodyGot, 0x1DEB318);
DataPointer(char, RougePickNailsGot, 0x1DEB319);
DataPointer(char, RougeTreasureScopeGot, 0x1DEB31A);
DataPointer(char, RougeIronBootsGot, 0x1DEB31B);
DataPointer(__int16, RougeMysticMelodyGot, 0x1DEB31C);
DataPointer(int, FrameIncrement, 0x1DEB50C);
DataPointer(int*, SaveFile, 0x1DEC600);
DataPointer(char, TextLanguage_Save, 0x1DEC609);
DataPointer(unsigned __int8, EmblemCount, 0x1DEC60E);
DataPointer(char, RumbleEnabled_Save, 0x1DEC60F);
DataArray(__int16, Life_Count_Save, 0x1DEC61C, 2);
DataArray(__int16, BattleWinCount_Save, 0x1DEC620, 2);
DataPointer(int, TotalRings_Save, 0x1DEC630);
DataPointer(char*, SomeStoryUnlocksOrSomething, 0x1DEFA93);
DataArray(int, MenuButtons_Pressed, 0x1DEFAB0, 2);
DataArray(AnalogThing, UnusedAnalogThings, 0x1DEFAC0, 8);
DataArray(int, MenuButtons_Held, 0x1DEFB10, 4);
DataArray(int, PortValid, 0x1DEFB30, 2);
DataArray(int, MenuButtons_Pressed_Old2, 0x1DEFB50, 4);
DataArray(PDS_PERIPHERAL *, ControllerPointers, 0x1DEFB60, 4);
DataArray(AnalogThing, AnalogThings, 0x1DEFBA0, 8);
DataArray(int, MenuButtons_Pressed_Old, 0x1DEFBE0, 4);
DataArray(PDS_PERIPHERAL, Controllers, 0x1DEFC00, 4);
DataArray(byte, IsThings, 0x1DEFDA0, 4);
DataArray(int, RumblePort_A, 0x1DEFDB0, 4);
DataPointer(int, SomeBuffer, 0x1DEFE20);
DataPointer(int*, Has_texlist_batadvPlayerChara_in_it, 0x2670544);
