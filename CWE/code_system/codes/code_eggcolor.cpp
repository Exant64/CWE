#include "stdafx.h"
#include "include/code_eggcolor.h"

struct EGGCOLORS { 
	int a, b; 
} EggColorCombo[] = {
	{ 0x01, 0x01 },
	{ 0xC1, 0x01 },
	{ 0x02, 0x02 },
	{ 0x03, 0x03 },
	{ 0x04, 0x04 },
	{ 0x8F, 0x04 },
	{ 0xf1, 0x04 },
	{ 0xb5, 0x04 },
	{ 0xAF, 0x04 },
	{ 0xD4, 0x04 },
	{ 0xC7, 0x04 },
	{ 0x15, 0x04 },
	{ 0x05, 0x05 },
	{ 0xCB, 0x05 },
	{ 0xD9, 0x05 },
	{ 0x97, 0x05 },
	{ 0xD3, 0x05 },
	{ 0xBB, 0x05 },
	{ 0xD5, 0x05 },
	{ 0xE2, 0x05 },
	{ 0x06, 0x06 },
	{ 0xEB, 0x06 },
	{ 0x78, 0x06 },
	{ 0xEC, 0x06 },
	{ 0xFB, 0x06 },
	{ 0x52, 0x06 },
	{ 0x07, 0x07 },
	{ 0x7F, 0x07 },
	{ 0x1E, 0x07 },
	{ 0x08, 0x08 },
	{ 0x8b, 0x08 },
	{ 0xA3, 0x08 },
	{ 0x80, 0x08 },
	{ 0xA9, 0x08 },
	{ 0xCb, 0x08 },
	{ 0xDB, 0x08 },
	{ 0xE7, 0x08 },
	{ 0xb2, 0x08 },
	{ 0x7B, 0x08 },
	{ 0xb8, 0x08 },
	{ 0xdf, 0x08 },
	{ 0xcf, 0x08 },
	{ 0x09, 0x09 },
	{ 0x85, 0x09 },
	{ 0x8C, 0x09 },
	{ 0xb1, 0x09 },
	{ 0xED, 0x09 },
	{ 0x9D, 0x09 },
	{ 0x0A, 0x0A },
	{ 0xE0, 0x0A },
	{ 0xD7, 0x0A },
	{ 0xDC, 0x0A },
	{ 0xEF, 0x0A },
	{ 0xBD, 0x0A },
	{ 0xCD, 0x0A },
	{ 0x93, 0x0A },
	{ 0xFA, 0x0A },
	{ 0xFD, 0x0A },
	{ 0xB7, 0x0A },
	{ 0x0B, 0x0B },
	{ 0xF7, 0x0B },
	{ 0xAB, 0x0B },
	{ 0xCA, 0x0B },
	{ 0xEE, 0x0B },
	{ 0xF8, 0x0B },
	{ 0xB0, 0x0B },
	{ 0xA5, 0x0B },
	{ 0xC4, 0x0B },
	{ 0xBF, 0x0B },
	{ 0xE5, 0x0B },
	{ 0x11, 0x0B },
	{ 0x91, 0x0B },
	{ 0x99, 0x0B },
	{ 0x92, 0x0B },
	{ 0x0C, 0x0C },
	{ 0x98, 0x0C },
	{ 0x9B, 0x0C },
	{ 0x95, 0x0C },
	{ 0xD6, 0x0C },
	{ 0x83, 0x0C },
	{ 0xBE, 0x0C },
	{ 0xE8, 0x0C },
	{ 0xF4, 0x0C },
	{ 0x0D, 0x0D }
};


void EggColor::OnChaoData(ChaoDataBase& chao) {
	if (chao.Type <= 0) return;

	if (chao.Texture > 0 && chao.Texture <= 15) {
		chao.EggColor = 53 + chao.Texture;
		return;
	}

	int eggColor = 0;
	if (chao.Shiny)
		eggColor += 27;

	if (chao.Color > 0)
	{
		// todo: rewrite this to not look like.. this
		bool found = false;
		if (!chao.MonotoneHighlights)
			eggColor += 13;

		for (int j = 0; j < 84; j++)
		{
			if (EggColorCombo[j].a == chao.Color)
			{
				eggColor += EggColorCombo[j].b;
				found = true;
				break;
			}
		}

		if (!found)
		{
			for (int j = 0; j < 84; j++)
			{
				if (EggColorCombo[j].a == chao.Gene.Color[0])
				{
					eggColor += EggColorCombo[j].b;
					found = true;
					break;
				}
			}
		}

		if (!found)
		{
			for (int j = 0; j < 84; j++)
			{
				if (EggColorCombo[j].a == chao.Gene.Color[1])
				{
					eggColor += EggColorCombo[j].b;
					found = true;
					break;
				}
			}
		}

		if (!found)
			eggColor = chao.Shiny ? 27 : 0;
	}
	chao.EggColor = eggColor;

	
};